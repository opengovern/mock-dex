# nginx.conf (Final Version)
# Configuration for Nginx to act as a reverse proxy for multiple services.
# - Redirects root ('/') requests to '/app/'.
# - Routes '/app/' to the Node.js app service ('app').
# - Routes '/dex/' to the Dex service ('dex').
# - Routes '/auth/' to the Go auth service ('go_auth_service').

worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Custom log format including upstream details
    log_format proxy '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for" '
                     'up_addr=$upstream_addr up_status=$upstream_status '
                     'up_resp_time=$upstream_response_time req_time=$request_time';

    access_log /var/log/nginx/access.log proxy;
    error_log /var/log/nginx/error.log error; # Use 'warn', 'info', or 'debug' for more verbosity

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # Use Docker's internal DNS resolver
    resolver 127.0.0.11 valid=10s;

    server {
        listen 80;
        server_name localhost; # Or your specific domain name

        # --- Redirect root path '/' to '/app/' ---
        location = / {
            # Send an HTTP 301 (Permanent Redirect) to the browser.
            return 301 /app/;
        }
        # -------------------------------------------

        # --- Location block for Dex OIDC Provider ---
        location /dex/ {
            # Proxy requests to the Dex service container
            # Trailing slash on target rewrites /dex/ -> /dex/ on backend
            proxy_pass http://dex:5556/dex/;
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            # Settings
            proxy_connect_timeout 60s;
            proxy_send_timeout    60s;
            proxy_read_timeout    60s;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_timeout 60s;
            add_header X-Proxy-Target $proxy_host always; # Debugging header
        }

        # --- Location block for the Node.js Application ---
        location /app/ {
            # Proxy requests to the Node.js app service ('app')
            # Trailing slash on target rewrites /app/ -> / on backend
            proxy_pass http://app:3000/;
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Prefix /app; # Uncomment if app needs prefix info
            # Settings & WebSocket Support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_connect_timeout 60s;
            proxy_send_timeout    60s;
            proxy_read_timeout    60s;
        }


        # Optional: Custom error pages
        # error_page 500 502 503 504 /50x.html;
        # location = /50x.html {
        #     root /usr/share/nginx/html;
        # }
    } # End server block
} # End http block